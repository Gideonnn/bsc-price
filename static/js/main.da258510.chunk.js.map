{"version":3,"sources":["components/TokenTable.js","components/LastUpdated.js","components/TokenSearch.js","services/pancakeswap.js","App.js","services/search.js","reportWebVitals.js","index.js"],"names":["TokenTableHead","TokenTableRow","token","onToggleFavorite","type","onChange","address","symbol","name","price","toFixed","TokenTable","tokens","map","LastUpdated","updatedAt","Date","toLocaleString","TokenSearch","placeholder","event","target","value","getTokens","a","fetch","then","res","json","data","updated_at","Object","keys","key","App","useState","setTokens","lastUpdate","setLastUpdate","useEffect","loadData","className","search","startsWith","term","collection","results","fuzzysort","go","threshold","console","log","x","obj","fuzzySort","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAA,SAASA,IACP,OACE,gCACE,+BACE,0CACA,wCACA,sCACA,2CACA,qDAMR,SAASC,EAAT,GAAqD,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,iBAC9B,OACE,gCACE,+BACE,6BACE,uBAAOC,KAAK,WAAWC,SAAU,kBAAMF,EAAiBD,EAAMI,cAEhE,6BAAKJ,EAAMK,SACX,6BAAKL,EAAMM,OACX,8BAAoB,IAAdN,EAAMO,OAAcC,QAAQ,KAClC,8BAAoB,IAAdR,EAAMO,OAAcC,QAAQ,OAP3BR,EAAMI,WAaN,SAASK,EAAT,GAAwD,IAAD,IAAjCC,cAAiC,MAAxB,GAAwB,EAApBT,EAAoB,EAApBA,iBAChD,OACE,kCACE,cAACH,EAAD,IACCY,EAAOC,KAAI,SAAAX,GAAK,OACf,cAACD,EAAD,CAAmCC,MAAOA,EAAOC,iBAAkBA,GAA/CD,EAAMI,eCnCnB,SAASQ,EAAT,GAAqC,IAAdC,EAAa,EAAbA,UACpC,OAAO,kDAAqB,IAAIC,KAAKD,GAAWE,oBCDnC,SAASC,EAAT,GAAsD,IAAD,IAA9BC,mBAA8B,MAAhB,GAAgB,EAAZd,EAAY,EAAZA,SACtD,OACE,uBAAOD,KAAK,OAAOe,YAAaA,EAAad,SAAU,SAAAe,GAAK,OAAIf,EAASe,EAAMC,OAAOC,U,WCFnF,SAAeC,IAAtB,+B,4CAAO,kCAAAC,EAAA,sEAC8BC,MAAM,2CAA2CC,MAAK,SAAAC,GAAG,OAC1FA,EAAIC,UAFD,uBACGC,EADH,EACGA,KAAMC,EADT,EACSA,WAGRlB,EAASmB,OAAOC,KAAKH,GAAMhB,KAAI,SAAAoB,GACnC,OAAO,aAAE3B,QAAS2B,GAAQJ,EAAKI,OAL5B,kBAQE,CACLlB,UAAWe,EACXlB,WAVG,4C,gDCiDQsB,MAzCf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNvB,EADM,KACEwB,EADF,OAEuBD,mBAAS,GAFhC,mBAENE,EAFM,KAEMC,EAFN,iDAQb,gCAAAd,EAAA,sEACsCD,IADtC,gBACUR,EADV,EACUA,UAAWH,EADrB,EACqBA,OACnBwB,EAAUxB,GACV0B,EAAcvB,GAHhB,4CARa,sBA8Bb,OA1BAwB,qBAAU,YAJG,mCAKXC,KACC,IAyBD,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,cAAC3B,EAAD,CAAaC,UAAWsB,IACxB,cAACnB,EAAD,CAAaC,YAAY,SAASd,SApBxC,SAA8BqC,GACvBA,IAIDA,EAAOC,WAAW,OACpBP,EAAUxB,EAAO8B,IAAW,IAG9BN,EC7BG,SAAmBQ,EAAMC,GAG9B,IAAMC,EAAUC,IAAUC,GAAGJ,EAAMC,EAAY,CAAEZ,IAAK,OAAQgB,WAAY,KAE1E,OADAC,QAAQC,IAAIL,GACLA,EAAQjC,KAAI,SAAAuC,GAAC,OAAIA,EAAEC,ODwBdC,CAAUZ,EAAQ9B,QAYxB,cAACD,EAAD,CAAYC,OAAQA,EAAQT,iBATlC,SAA8BG,GAC5B4C,QAAQC,IAAI7C,YEvBDiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.da258510.chunk.js","sourcesContent":["function TokenTableHead() {\n  return (\n    <thead>\n      <tr>\n        <th>Favorite</th>\n        <th>Symbol</th>\n        <th>Name</th>\n        <th>Price ($)</th>\n        <th>Price (â‚¬)</th>\n      </tr>\n    </thead>\n  );\n}\n\nfunction TokenTableRow({ token, onToggleFavorite }) {\n  return (\n    <tbody>\n      <tr key={token.address}>\n        <td>\n          <input type=\"checkbox\" onChange={() => onToggleFavorite(token.address)} />\n        </td>\n        <td>{token.symbol}</td>\n        <td>{token.name}</td>\n        <td>{(token.price * 0.83).toFixed(8)}</td>\n        <td>{(token.price * 0.83).toFixed(8)}</td>\n      </tr>\n    </tbody>\n  );\n}\n\nexport default function TokenTable({ tokens = [], onToggleFavorite }) {\n  return (\n    <table>\n      <TokenTableHead />\n      {tokens.map(token => (\n        <TokenTableRow key={token.address} token={token} onToggleFavorite={onToggleFavorite} />\n      ))}\n    </table>\n  );\n}\n","export default function LastUpdated({ updatedAt }) {\n  return <span>Last updated: {new Date(updatedAt).toLocaleString()}</span>;\n}\n","export default function TokenSearch({ placeholder = '', onChange }) {\n  return (\n    <input type=\"text\" placeholder={placeholder} onChange={event => onChange(event.target.value)} />\n  );\n}\n","export async function getTokens() {\n  const { data, updated_at } = await fetch('https://api.pancakeswap.info/api/tokens').then(res =>\n    res.json(),\n  );\n  const tokens = Object.keys(data).map(key => {\n    return { address: key, ...data[key] };\n  });\n\n  return {\n    updatedAt: updated_at,\n    tokens,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport TokenTable from './components/TokenTable';\nimport LastUpdated from './components/LastUpdated';\nimport TokenSearch from './components/TokenSearch';\nimport { getTokens } from './services/pancakeswap';\nimport { fuzzySort } from './services/search';\nimport './App.css';\n\nfunction App() {\n  const [tokens, setTokens] = useState([]);\n  const [lastUpdate, setLastUpdate] = useState(0);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  async function loadData() {\n    const { updatedAt, tokens } = await getTokens();\n    setTokens(tokens);\n    setLastUpdate(updatedAt);\n  }\n\n  function handleOnSearchChange(search) {\n    if (!search) {\n      return;\n    }\n\n    if (search.startsWith('0x')) {\n      setTokens(tokens[search] || []);\n    }\n\n    setTokens(fuzzySort(search, tokens));\n  }\n\n  function handleToggleFavorite(address) {\n    console.log(address);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <LastUpdated updatedAt={lastUpdate} />\n        <TokenSearch placeholder=\"Search\" onChange={handleOnSearchChange} />\n        <TokenTable tokens={tokens} onToggleFavorite={handleToggleFavorite} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import fuzzysort from 'fuzzysort';\n\nexport function fuzzySort(term, collection) {\n  // console.log(term);\n  // console.log(collection);\n  const results = fuzzysort.go(term, collection, { key: 'name', threshold: -99 });\n  console.log(results);\n  return results.map(x => x.obj);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}