{"version":3,"sources":["components/TokenTable.js","components/LastUpdated.js","components/TokenSearch.js","services/pancakeswap.js","App.js","services/search.js","reportWebVitals.js","index.js"],"names":["TokenTableHead","ChartLink","address","href","target","rel","PancakeswapLink","version","link","TokenTableRow","token","onToggleFavorite","symbol","name","Number","price","toFixed","TokenTable","tokens","map","LastUpdated","updatedAt","Date","toLocaleString","TokenSearch","placeholder","onChange","type","event","value","getTokens","a","fetch","then","res","json","data","updated_at","Object","keys","key","App","useState","setTokens","lastUpdate","setLastUpdate","useEffect","loadData","className","search","term","collection","startsWith","fuzzysort","go","threshold","x","obj","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86fc986b.chunk.js","sourcesContent":["function TokenTableHead() {\n  return (\n    <thead>\n      <tr>\n        {/* <th>Favorite</th> */}\n        <th>Symbol</th>\n        <th>Name</th>\n        <th>Price ($)</th>\n        <th>Price (€)</th>\n        <th>Poocoin</th>\n        <th>Pancakeswap</th>\n      </tr>\n    </thead>\n  );\n}\n\nfunction ChartLink({ address }) {\n  return (\n    <a href={`https://poocoin.app/tokens/${address}`} target=\"_blank\" rel=\"noreferrer noopener\">\n      Chart\n    </a>\n  );\n}\n\nfunction PancakeswapLink({ address, version }) {\n  const origin =\n    version === 1\n      ? 'https://v1exchange.pancakeswap.finance'\n      : 'https://exchange.pancakeswap.finance';\n  const link = `${origin}/#/swap?outputCurrency=${address}&inputCurrency=BNB`;\n\n  return (\n    <a href={link} target=\"_blank\" rel=\"noreferrer noopener\">\n      V{version}\n    </a>\n  );\n}\n\nfunction TokenTableRow({ token, onToggleFavorite }) {\n  return (\n    <tbody>\n      <tr key={token.address}>\n        {/* <td>\n          <input type=\"checkbox\" onChange={() => onToggleFavorite(token.address)} />\n        </td> */}\n        <td>{token.symbol}</td>\n        <td>{token.name}</td>\n        <td>$ {Number(token.price).toFixed(8)}</td>\n        <td>€ {(token.price * 0.83).toFixed(8)}</td>\n        <td>\n          <ChartLink address={token.address} />\n        </td>\n        <td>\n          <PancakeswapLink address={token.address} version={1} />\n          &nbsp;-&nbsp;\n          <PancakeswapLink address={token.address} version={2} />\n        </td>\n      </tr>\n    </tbody>\n  );\n}\n\nexport default function TokenTable({ tokens = [], onToggleFavorite }) {\n  return (\n    <table>\n      <TokenTableHead />\n      {tokens.map(token => (\n        <TokenTableRow key={token.address} token={token} onToggleFavorite={onToggleFavorite} />\n      ))}\n    </table>\n  );\n}\n","export default function LastUpdated({ updatedAt }) {\n  return <span>Last updated: {new Date(updatedAt).toLocaleString()}</span>;\n}\n","export default function TokenSearch({ placeholder = '', onChange }) {\n  return (\n    <input type=\"text\" placeholder={placeholder} onChange={event => onChange(event.target.value)} />\n  );\n}\n","export async function getTokens() {\n  const { data, updated_at } = await fetch('https://api.pancakeswap.info/api/tokens').then(res =>\n    res.json(),\n  );\n  const tokens = Object.keys(data).map(key => {\n    return { address: key, ...data[key] };\n  });\n\n  return {\n    updatedAt: updated_at,\n    tokens,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport TokenTable from './components/TokenTable';\nimport LastUpdated from './components/LastUpdated';\nimport TokenSearch from './components/TokenSearch';\nimport { getTokens } from './services/pancakeswap';\nimport { fuzzySort } from './services/search';\nimport './App.css';\n\nfunction App() {\n  const [tokens, setTokens] = useState([]);\n  const [lastUpdate, setLastUpdate] = useState(0);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  async function loadData() {\n    const { updatedAt, tokens } = await getTokens();\n    setTokens(tokens);\n    setLastUpdate(updatedAt);\n  }\n\n  function handleOnSearchChange(search) {\n    if (!search) {\n      return;\n    }\n\n    if (search.startsWith('0x')) {\n      setTokens(tokens[search] || []);\n    }\n\n    setTokens(fuzzySort(search, tokens));\n  }\n\n  function handleToggleFavorite(address) {\n    console.log(address);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <LastUpdated updatedAt={lastUpdate} />\n        <TokenSearch placeholder=\"Search\" onChange={handleOnSearchChange} />\n        <TokenTable tokens={tokens} onToggleFavorite={handleToggleFavorite} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import fuzzysort from 'fuzzysort';\n\nexport function fuzzySort(term, collection) {\n  return fuzzysort.go(term, collection, { key: 'name', threshold: -99 }).map(x => x.obj);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}